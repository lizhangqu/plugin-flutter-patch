buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
        maven {
            url 'https://dl.google.com/dl/android/maven2/'
        }
        jcenter()
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        File localFile = project.rootProject.file('local.properties')
        Properties extProperties = new Properties()
        if (localFile.exists()) {
            extProperties.load(localFile.newDataInputStream())
        }
        def androidGradlePluginVersion = "3.2.1"
        if (extProperties.containsKey('gradleVersion')) {
            androidGradlePluginVersion = extProperties.get("gradleVersion") as String
        }
        if (project.hasProperty('gradleVersion')) {
            androidGradlePluginVersion = project.getProperties().get("gradleVersion") as String
        }
        project.logger.error "root build.gradle androidGradlePluginVersion ${androidGradlePluginVersion}"

        classpath "com.android.tools.build:gradle:${androidGradlePluginVersion}"
    }
}

allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        maven {
            url 'https://maven.aliyun.com/repository/jcenter'
        }
        maven {
            url 'https://dl.google.com/dl/android/maven2/'
        }
        jcenter()
        mavenCentral()
        mavenLocal()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
